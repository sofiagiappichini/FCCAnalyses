import os, copy # tagging
import ROOT

inputDir = "/ceph/awiedl/FCCee/HiggsCP/stage2_100Coll150/QQ/HH/"

#Optional: output directory, default is local running directory
outputDir   = "/ceph/awiedl/FCCee/HiggsCP/stage3_100Coll150/QQ/HH/" 

#Mandatory: List of processes
list = {}

for process in os.listdir(inputDir):
    list[process] = {}

processList = list

processList_all = {
    'p8_ee_WW_ecm240':{},
    'p8_ee_Zqq_ecm240':{},
    'p8_ee_ZZ_ecm240':{},
    
    'wzp6_ee_tautau_ecm240':{},
    'wzp6_ee_mumu_ecm240':{},
    'wzp6_ee_ee_Mee_30_150_ecm240':{},

    'wzp6_ee_tautauH_Htautau_ecm240': {},
    'wzp6_ee_tautauH_Hbb_ecm240': {},
    'wzp6_ee_tautauH_Hcc_ecm240': {},
    'wzp6_ee_tautauH_Hss_ecm240': {},
    'wzp6_ee_tautauH_Hgg_ecm240': {},
    'wzp6_ee_tautauH_HWW_ecm240': {},
    'wzp6_ee_tautauH_HZZ_ecm240': {},

    'wzp6_egamma_eZ_Zmumu_ecm240': {},
    'wzp6_egamma_eZ_Zee_ecm240': {},
    'wzp6_gammae_eZ_Zmumu_ecm240': {},
    'wzp6_gammae_eZ_Zee_ecm240': {},

    'wzp6_gaga_tautau_60_ecm240': {},
    'wzp6_gaga_mumu_60_ecm240': {},
    'wzp6_gaga_ee_60_ecm240': {},

    'wzp6_ee_nuenueZ_ecm240': {},

    'wzp6_ee_nunuH_Htautau_ecm240': {},
    'wzp6_ee_nunuH_Hbb_ecm240': {},
    'wzp6_ee_nunuH_Hcc_ecm240': {},
    'wzp6_ee_nunuH_Hss_ecm240': {},
    'wzp6_ee_nunuH_Hgg_ecm240': {},
    'wzp6_ee_nunuH_HWW_ecm240': {},
    'wzp6_ee_nunuH_HZZ_ecm240': {},

    'wzp6_ee_eeH_Htautau_ecm240': {},
    'wzp6_ee_eeH_Hbb_ecm240': {},
    'wzp6_ee_eeH_Hcc_ecm240': {},
    'wzp6_ee_eeH_Hss_ecm240': {},
    'wzp6_ee_eeH_Hgg_ecm240': {},
    'wzp6_ee_eeH_HWW_ecm240': {},
    'wzp6_ee_eeH_HZZ_ecm240': {},

    'wzp6_ee_mumuH_Htautau_ecm240': {},
    'wzp6_ee_mumuH_Hbb_ecm240': {},
    'wzp6_ee_mumuH_Hcc_ecm240': {},
    'wzp6_ee_mumuH_Hss_ecm240': {},
    'wzp6_ee_mumuH_Hgg_ecm240': {},
    'wzp6_ee_mumuH_HWW_ecm240': {},
    'wzp6_ee_mumuH_HZZ_ecm240': {},

    'wzp6_ee_bbH_Htautau_ecm240': {},
    'wzp6_ee_bbH_Hbb_ecm240': {},
    'wzp6_ee_bbH_Hcc_ecm240': {},
    'wzp6_ee_bbH_Hss_ecm240': {},
    'wzp6_ee_bbH_Hgg_ecm240': {},
    'wzp6_ee_bbH_HWW_ecm240': {},
    'wzp6_ee_bbH_HZZ_ecm240': {},

    'wzp6_ee_ccH_Htautau_ecm240': {},
    'wzp6_ee_ccH_Hbb_ecm240': {},
    'wzp6_ee_ccH_Hcc_ecm240': {},
    'wzp6_ee_ccH_Hss_ecm240': {},
    'wzp6_ee_ccH_Hgg_ecm240': {},
    'wzp6_ee_ccH_HWW_ecm240': {},
    'wzp6_ee_ccH_HZZ_ecm240': {},

    'wzp6_ee_ssH_Htautau_ecm240': {},
    'wzp6_ee_ssH_Hbb_ecm240': {},
    'wzp6_ee_ssH_Hcc_ecm240': {},
    'wzp6_ee_ssH_Hss_ecm240': {},
    'wzp6_ee_ssH_Hgg_ecm240': {},
    'wzp6_ee_ssH_HWW_ecm240': {},
    'wzp6_ee_ssH_HZZ_ecm240': {},

    'wzp6_ee_qqH_Htautau_ecm240': {},
    'wzp6_ee_qqH_Hbb_ecm240': {},
    'wzp6_ee_qqH_Hcc_ecm240': {},
    'wzp6_ee_qqH_Hss_ecm240': {},
    'wzp6_ee_qqH_Hgg_ecm240': {},
    'wzp6_ee_qqH_HWW_ecm240': {},
    'wzp6_ee_qqH_HZZ_ecm240': {},
}

# additional/costom C++ functions, defined in header files (optional)
includePaths = ["functions.h"]

ROOT.gInterpreter.ProcessLine('''TMVA::Experimental::RBDT<> bdt("Htautau", "/ceph/sgiappic/FCCAnalyses/examples/FCCee/higgs/tautau/BDT/xgb_bdt_stage2_100Coll150_QQHH.root");
                                computeModel = TMVA::Experimental::Compute<23, float>(bdt);''') #needs to be passed the number of variables

#Mandatory: RDFanalysis class where the use defines the operations on the TTree
class RDFanalysis():
    def analysers(df):
        df2 = (df
                #recast some of the varibales to be all the same type
                .Define("fRecoEmiss_costheta",       "static_cast<float>(RecoEmiss_costheta)")
                .Define("fRecoZ_pz",       "static_cast<float>(RecoZ_pz)")
                .Define("fRecoZ_pt",       "static_cast<float>(RecoZ_pt)")
                .Define("fRecoZ_p",       "static_cast<float>(RecoZ_p)")
                .Define("fRecoZ_e",       "static_cast<float>(RecoZ_e)")
                .Define("fRecoZ_eta",       "static_cast<float>(RecoZ_eta)")
                .Define("fRecoZ_mass",       "static_cast<float>(RecoZ_mass)")
                .Define("fRecoH_pz",       "static_cast<float>(RecoH_pz)")
                .Define("fRecoH_pt",       "static_cast<float>(RecoH_pt)")
                .Define("fRecoH_p",       "static_cast<float>(RecoH_p)")
                .Define("fRecoH_e",       "static_cast<float>(RecoH_e)")
                .Define("fRecoH_eta",       "static_cast<float>(RecoH_eta)")
                .Define("fRecoH_mass",       "static_cast<float>(RecoH_mass)")
                .Define("fTau_DPhi",       "static_cast<float>(Tau_DPhi)")
                .Define("fTau_DR",       "static_cast<float>(Tau_DR)")
                .Define("fTau_cos",       "static_cast<float>(Tau_cos)")
                .Define("fTau_DEta",       "static_cast<float>(Tau_DEta)")
                .Define("fRecoil",       "static_cast<float>(Recoil)")
                .Define("fCollinear_mass",       "static_cast<float>(Collinear_mass)")

                .Define("BDT_pred", ROOT.computeModel, ["RecoEmiss_pz",
                                                        "RecoEmiss_pt",
                                                        "RecoEmiss_p",
                                                        "RecoEmiss_e",
                                                        "fRecoEmiss_costheta",
                                                        "fRecoZ_pz",
                                                        "fRecoZ_p",
                                                        "fRecoZ_pt",
                                                        "fRecoZ_e",
                                                        "fRecoZ_eta",
                                                        "fRecoZ_mass",
                                                        "fRecoH_pz",
                                                        "fRecoH_p",
                                                        "fRecoH_pt",
                                                        "fRecoH_e",
                                                        "fRecoH_eta",
                                                        "fRecoH_mass",
                                                        "fTau_DPhi",
                                                        "fTau_DR",
                                                        "fTau_cos",
                                                        "fTau_DEta",
                                                        "fRecoil",
                                                        "fCollinear_mass"])

                .Define("BDT_score",        "BDT_pred.at(0)")
        )
        return df2

    #__________________________________________________________
    #Mandatory: output function, please make sure you return the branchlist as a python list
    def output():
        #branches from stage1 to be kept for histogram booking in final and plotting
        branchList = [
            ######## Monte-Carlo particles #######
            "n_FSGenElectron",
            "FSGenElectron_e",
            "FSGenElectron_p",
            "FSGenElectron_pt",
            "FSGenElectron_px",
            "FSGenElectron_py",
            "FSGenElectron_pz",
            "FSGenElectron_y",
            "FSGenElectron_eta",
            "FSGenElectron_theta",
            "FSGenElectron_phi",
            "FSGenElectron_charge",
            "FSGenElectron_mass",
            "FSGenElectron_parentPDG",
            "FSGenElectron_vertex_x",
            "FSGenElectron_vertex_y",
            "FSGenElectron_vertex_z",

            "n_FSGenMuon",
            "FSGenMuon_e",
            "FSGenMuon_p",
            "FSGenMuon_pt",
            "FSGenMuon_px",
            "FSGenMuon_py",
            "FSGenMuon_pz",
            "FSGenMuon_y",
            "FSGenMuon_eta",
            "FSGenMuon_theta",
            "FSGenMuon_phi",
            "FSGenMuon_charge",
            "FSGenMuon_mass",
            "FSGenMuon_parentPDG",
            "FSGenMuon_vertex_x",
            "FSGenMuon_vertex_y",
            "FSGenMuon_vertex_z",

            #"n_ZFSGenMuon",
            #"ZFSGenMuon_e",
            #"ZFSGenMuon_p",
            #"ZFSGenMuon_pt",
            #"ZFSGenMuon_px",
            #"ZFSGenMuon_py",
            #"ZFSGenMuon_pz",
            #"ZFSGenMuon_y",
            #"ZFSGenMuon_eta",
            #"ZFSGenMuon_theta",
            #"ZFSGenMuon_phi",
            #"ZFSGenMuon_charge",
            #"ZFSGenMuon_mass",
            #"ZFSGenMuon_parentPDG",
            #"ZFSGenMuon_vertex_x",
            #"ZFSGenMuon_vertex_y",
            #"ZFSGenMuon_vertex_z",

            #"n_AllGenTau",
            #"AllGenTau_e",
            #"AllGenTau_p",
            #"AllGenTau_pt",
            #"AllGenTau_px",
            #"AllGenTau_py",
            #"AllGenTau_pz",
            #"AllGenTau_y",
            #"AllGenTau_eta",
            #"AllGenTau_theta",
            #"AllGenTau_phi",
            #"AllGenTau_charge",
            #"AllGenTau_mass",
            #"AllGenTau_parentPDG",
            #"AllGenTau_vertex_x",
            #"AllGenTau_vertex_y",
            #"AllGenTau_vertex_z",

            #"noFSRGenTau_parentPDG",

            "n_FSRGenTau",
            "FSRGenTau_e",
            "FSRGenTau_p",
            "FSRGenTau_pt",
            "FSRGenTau_px",
            "FSRGenTau_py",
            "FSRGenTau_pz",
            "FSRGenTau_y",
            "FSRGenTau_eta",
            "FSRGenTau_theta",
            "FSRGenTau_phi",
            "FSRGenTau_charge",
            "FSRGenTau_mass",
            "FSRGenTau_parentPDG",
            "FSRGenTau_vertex_x",
            "FSRGenTau_vertex_y",
            "FSRGenTau_vertex_z",

            "n_TauNeg_MuNuNu",       
            "n_TauNeg_MuNuNu_Phot",  
            "n_TauNeg_ENuNu",        
            "n_TauNeg_ENuNu_Phot",   
            "n_TauNeg_PiNu",         
            "n_TauNeg_PiNu_Phot",    
            "n_TauNeg_KNu",          
            "n_TauNeg_KNu_Phot",     
            "n_TauNeg_PiK0Nu",       
            "n_TauNeg_PiK0Nu_Phot",  
            "n_TauNeg_KK0Nu",        
            "n_TauNeg_KK0Nu_Phot",   
            "n_TauNeg_3PiNu",        
            "n_TauNeg_3PiNu_Phot",   
            "n_TauNeg_PiKKNu",       
            "n_TauNeg_PiKKNu_Phot",  

            "n_TauPos_MuNuNu",       
            "n_TauPos_MuNuNu_Phot",  
            "n_TauPos_ENuNu",        
            "n_TauPos_ENuNu_Phot",   
            "n_TauPos_PiNu",         
            "n_TauPos_PiNu_Phot",    
            "n_TauPos_KNu",          
            "n_TauPos_KNu_Phot",     
            "n_TauPos_PiK0Nu",       
            "n_TauPos_PiK0Nu_Phot",  
            "n_TauPos_KK0Nu",        
            "n_TauPos_KK0Nu_Phot",   
            "n_TauPos_3PiNu",        
            "n_TauPos_3PiNu_Phot",   
            "n_TauPos_PiKKNu",       
            "n_TauPos_PiKKNu_Phot", 

            "n_FSGenNeutrino",
            "FSGenNeutrino_e",
            "FSGenNeutrino_p",
            "FSGenNeutrino_pt",
            "FSGenNeutrino_px",
            "FSGenNeutrino_py",
            "FSGenNeutrino_pz",
            "FSGenNeutrino_y",
            "FSGenNeutrino_eta",
            "FSGenNeutrino_theta",
            "FSGenNeutrino_phi",
            "FSGenNeutrino_charge",
            #"FSGenNeutrino_parentPDG",

            "n_FSGenPhoton",
            "FSGenPhoton_e",
            "FSGenPhoton_p",
            "FSGenPhoton_pt",
            "FSGenPhoton_px",
            "FSGenPhoton_py",
            "FSGenPhoton_pz",
            "FSGenPhoton_y",
            "FSGenPhoton_eta",
            "FSGenPhoton_theta",
            "FSGenPhoton_phi",
            "FSGenPhoton_charge",
            #"FSGenPhoton_parentPDG",

            #"n_GenZ",
            #"n_GenW",
            "n_GenHiggs",
            "GenHiggs_e",
            "GenHiggs_p", 
            "GenHiggs_pt", 
            "GenHiggs_px", 
            "GenHiggs_py", 
            "GenHiggs_pz", 
            "GenHiggs_y", 
            "GenHiggs_mass",
            "GenHiggs_eta", 
            "GenHiggs_theta", 
            "GenHiggs_phi", 
            "GenHiggs_charge", 

            ######## Reconstructed particles #######
            #"RecoMC_PID",

            "n_RecoElectrons",
            "RecoElectron_e",
            "RecoElectron_p",
            "RecoElectron_pt",
            "RecoElectron_px",
            "RecoElectron_py",
            "RecoElectron_pz",
            "RecoElectron_y",
            "RecoElectron_eta",
            "RecoElectron_theta",
            "RecoElectron_phi",
            "RecoElectron_charge",
            "RecoElectron_mass",
            "RecoElectronTrack_absD0",
            "RecoElectronTrack_absZ0",
            "RecoElectronTrack_absD0sig",
            "RecoElectronTrack_absZ0sig",
            "RecoElectronTrack_D0cov",
            "RecoElectronTrack_Z0cov",

            "n_RecoElectrons_sel",
            "RecoElectron_sel_e",
            "RecoElectron_sel_p",
            "RecoElectron_sel_pt",
            "RecoElectron_sel_px",
            "RecoElectron_sel_py",
            "RecoElectron_sel_pz",
            "RecoElectron_sel_y",
            "RecoElectron_sel_eta",
            "RecoElectron_sel_theta",
            "RecoElectron_sel_phi",
            "RecoElectron_sel_charge",
            "RecoElectron_sel_mass",
            "RecoElectronTrack_sel_absD0",
            "RecoElectronTrack_sel_absZ0",
            "RecoElectronTrack_sel_absD0sig",
            "RecoElectronTrack_sel_absZ0sig",
            "RecoElectronTrack_sel_D0cov",
            "RecoElectronTrack_sel_Z0cov",

            "n_RecoMuons",
            "RecoMuon_e",
            "RecoMuon_p",
            "RecoMuon_pt",
            "RecoMuon_px",
            "RecoMuon_py",
            "RecoMuon_pz",
            "RecoMuon_y",
            "RecoMuon_eta",
            "RecoMuon_theta",
            "RecoMuon_phi",
            "RecoMuon_charge",
            "RecoMuon_mass",
            "RecoMuonTrack_absD0",
            "RecoMuonTrack_absZ0",
            "RecoMuonTrack_absD0sig",
            "RecoMuonTrack_absZ0sig",
            "RecoMuonTrack_D0cov",
            "RecoMuonTrack_Z0cov",

            "n_RecoMuons_sel",
            "RecoMuon_sel_e",
            "RecoMuon_sel_p",
            "RecoMuon_sel_pt",
            "RecoMuon_sel_px",
            "RecoMuon_sel_py",
            "RecoMuon_sel_pz",
            "RecoMuon_sel_y",
            "RecoMuon_sel_eta",
            "RecoMuon_sel_theta",
            "RecoMuon_sel_phi",
            "RecoMuon_sel_charge",
            "RecoMuon_sel_mass",
            "RecoMuonTrack_sel_absD0",
            "RecoMuonTrack_sel_absZ0",
            "RecoMuonTrack_sel_absD0sig",
            "RecoMuonTrack_sel_absZ0sig",
            "RecoMuonTrack_sel_D0cov",
            "RecoMuonTrack_sel_Z0cov",

            "n_RecoLeptons",
            "RecoLepton_e",
            "RecoLepton_p",
            "RecoLepton_pt",
            "RecoLepton_px",
            "RecoLepton_py",
            "RecoLepton_pz",
            "RecoLepton_y",
            "RecoLepton_eta",
            "RecoLepton_theta",
            "RecoLepton_phi",
            "RecoLepton_charge",
            "RecoLepton_mass",
            "RecoLeptonTrack_absD0",
            "RecoLeptonTrack_absZ0",
            "RecoLeptonTrack_absD0sig",
            "RecoLeptonTrack_absZ0sig",
            "RecoLeptonTrack_D0cov",
            "RecoLeptonTrack_Z0cov",

            "n_RecoLeptons_sel",
            "RecoLepton_sel_e",
            "RecoLepton_sel_p",
            "RecoLepton_sel_pt",
            "RecoLepton_sel_px",
            "RecoLepton_sel_py",
            "RecoLepton_sel_pz",
            "RecoLepton_sel_y",
            "RecoLepton_sel_eta",
            "RecoLepton_sel_theta",
            "RecoLepton_sel_phi",
            "RecoLepton_sel_charge",
            "RecoLepton_sel_mass",
            "RecoLeptonTrack_sel_absD0",
            "RecoLeptonTrack_sel_absZ0",
            "RecoLeptonTrack_sel_absD0sig",
            "RecoLeptonTrack_sel_absZ0sig",
            "RecoLeptonTrack_sel_D0cov",
            "RecoLeptonTrack_sel_Z0cov",

            "n_RecoPhotons",
            "RecoPhoton_e",
            "RecoPhoton_p",
            "RecoPhoton_pt",
            "RecoPhoton_px",
            "RecoPhoton_py",
            "RecoPhoton_pz",
            "RecoPhoton_y",
            "RecoPhoton_eta",
            "RecoPhoton_theta",
            "RecoPhoton_phi",
            "RecoPhoton_charge",

            "RecoEmiss_px",
            "RecoEmiss_py",
            "RecoEmiss_pz",
            "RecoEmiss_pt",
            "RecoEmiss_p",
            "RecoEmiss_e",

            #"n_RecoTracks",
            #"RecoVertexObject",
            #"RecoVertex",
            #"n_PrimaryTracks",
            #"PrimaryVertexObject",
            #"PrimaryVertex", 
            #"PrimaryVertex_xyz",
            #"PrimaryVertes_xy",
            #"n_SecondaryTracks",
            #"SecondaryVertexObject",
            #"SecondaryVertex",
            #"SecondaryVertex_xyz",
            #"SecondaryVertes_xy",
            #"VertexObject", 
            #"RecoPartPID" ,
            #"RecoPartPIDAtVertex",

            "Jets_R5_e",     
            "Jets_R5_p",     
            "Jets_R5_pt",     
            "Jets_R5_px",   
            "Jets_R5_py",   
            "Jets_R5_pz",     
            "Jets_R5_eta",    
            "Jets_R5_theta",   
            "Jets_R5_phi",     
            "Jets_R5_mass",        
            "n_Jets_R5", 

            "Jets_excl4_e",     
            "Jets_excl4_p",     
            "Jets_excl4_pt",     
            "Jets_excl4_px",   
            "Jets_excl4_py",   
            "Jets_excl4_pz",     
            "Jets_excl4_eta",    
            "Jets_excl4_theta",   
            "Jets_excl4_phi",     
            "Jets_excl4_mass",        
            "n_Jets_excl4", 
 
            "TauFromJet_R5_p",
            "TauFromJet_R5_pt",
            "TauFromJet_R5_px",
            "TauFromJet_R5_py",
            "TauFromJet_R5_pz",
            "TauFromJet_R5_theta",
            "TauFromJet_R5_phi",
            "TauFromJet_R5_e",
            "TauFromJet_R5_eta",
            "TauFromJet_R5_y",
            "TauFromJet_R5_charge",
            "TauFromJet_R5_type",
            "TauFromJet_R5_mass",
            "n_TauFromJet_R5",

            "TauFromJet_p",
            "TauFromJet_pt",
            "TauFromJet_px",
            "TauFromJet_py",
            "TauFromJet_pz",
            "TauFromJet_theta",
            "TauFromJet_phi",
            "TauFromJet_eta",
            "TauFromJet_y",
            "TauFromJet_e",
            "TauFromJet_charge",
            "TauFromJet_type",
            "TauFromJet_mass",
            "n_TauFromJet",

            "Jets_R5_sel_e",     
            "Jets_R5_sel_p",     
            "Jets_R5_sel_pt",     
            "Jets_R5_sel_px",   
            "Jets_R5_sel_py",   
            "Jets_R5_sel_pz",     
            "Jets_R5_sel_eta",    
            "Jets_R5_sel_theta",   
            "Jets_R5_sel_phi",     
            "Jets_R5_sel_mass",      
            "n_Jets_R5_sel", 

        ]
        #complex variables added here at stage2
        branchList += [
            "RecoEmiss_eta",
            "RecoEmiss_phi",
            "RecoEmiss_theta",
            "RecoEmiss_y",
            "RecoEmiss_costheta",

            "RecoZ_px",
            "RecoZ_py",
            "RecoZ_pz",
            "RecoZ_p",
            "RecoZ_pt",
            "RecoZ_e",
            "RecoZ_eta",
            "RecoZ_phi",
            "RecoZ_theta",
            "RecoZ_y",
            "RecoZ_mass",

            "RecoZLead_px", 
            "RecoZLead_py",   
            "RecoZLead_pz",   
            "RecoZLead_p",    
            "RecoZLead_pt",   
            "RecoZLead_e",    
            "RecoZLead_eta",    
            "RecoZLead_phi",    
            "RecoZLead_theta",   
            "RecoZLead_y",     
            "RecoZLead_mass",   

            "RecoZSub_px",    
            "RecoZSub_py",   
            "RecoZSub_pz",   
            "RecoZSub_p",   
            "RecoZSub_pt",  
            "RecoZSub_e",     
            "RecoZSub_eta",   
            "RecoZSub_phi",   
            "RecoZSub_theta",    
            "RecoZSub_y",    
            "RecoZSub_mass",   

            "RecoH_px",
            "RecoH_py",
            "RecoH_pz",
            "RecoH_p",
            "RecoH_pt",
            "RecoH_e",
            "RecoH_eta",
            "RecoH_phi",
            "RecoH_theta",
            "RecoH_y",
            "RecoH_mass",

            "TauLead_px",    
            "TauLead_py",   
            "TauLead_pz",   
            "TauLead_p",   
            "TauLead_pt",   
            "TauLead_e",    
            "TauLead_eta",    
            "TauLead_phi",    
            "TauLead_theta",    
            "TauLead_y",    
            "TauLead_mass",

            "TauSub_px",    
            "TauSub_py",   
            "TauSub_pz",   
            "TauSub_p",   
            "TauSub_pt",   
            "TauSub_e",    
            "TauSub_eta",    
            "TauSub_phi",    
            "TauSub_theta",    
            "TauSub_y",    
            "TauSub_mass",

            "TauP_px",    
            "TauP_py",   
            "TauP_pz",   
            "TauP_p",   
            "TauP_pt",   
            "TauP_e",    
            "TauP_eta",    
            "TauP_phi",    
            "TauP_theta",    
            "TauP_y",    
            "TauP_mass",

            "TauM_px",    
            "TauM_py",   
            "TauM_pz",   
            "TauM_p",   
            "TauM_pt",   
            "TauM_e",    
            "TauM_eta",    
            "TauM_phi",    
            "TauM_theta",    
            "TauM_y",    
            "TauM_mass",

            "Recoil",
            "Collinear_mass", 
        
            "Tau_DR",
            "Tau_cos",
            "Tau_DEta", 
            "Tau_DPhi",
            
            "RecoZDaughter_DR", 
            "RecoZDaughter_cos", 
            "RecoZDaughter_DEta", 
            "RecoZDaughter_DPhi", 

            "BDT_score",

        ]

        return branchList