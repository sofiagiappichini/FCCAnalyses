import os, copy # tagging
import ROOT

### it's best to process stage3 in batch because some files will be empty and it will abort everything but in batch it aborts only the respective jobs

inputDir = "/ceph/sgiappic/HiggsCP/ecm365/R5-tag/stage2_280125_cut/NuNu/HH/"

#Optional: output directory, default is local running directory
outputDir   = "/ceph/gsiappic/HiggsCP/ecm365/R5-tag/stage3_280125/NuNu/HH/" 

#Mandatory: List of processes
processList = {

    'p8_ee_WW_ecm365':{},
    'p8_ee_Zqq_ecm365':{},
    'p8_ee_ZZ_ecm365':{},
    'p8_ee_Zbb_ecm365':{},
    'p8_ee_Zcc_ecm365':{},
    'p8_ee_Zss_ecm365':{},
    'p8_ee_tt_ecm365':{},
    
    'wzp6_ee_tautau_ecm365':{},
    'wzp6_ee_mumu_ecm365':{},
    'wzp6_ee_ee_Mee_30_150_ecm365':{},

    'wzp6_ee_tautauH_Htautau_ecm365': {},
    'wzp6_ee_tautauH_Hbb_ecm365': {},
    'wzp6_ee_tautauH_Hcc_ecm365': {},
    'wzp6_ee_tautauH_Hss_ecm365': {},
    'wzp6_ee_tautauH_Hgg_ecm365': {},
    'wzp6_ee_tautauH_HWW_ecm365': {},
    'wzp6_ee_tautauH_HZZ_ecm365': {},

    'wzp6_egamma_eZ_Zmumu_ecm365': {},
    'wzp6_egamma_eZ_Zee_ecm365': {},
    'wzp6_gammae_eZ_Zmumu_ecm365': {},
    'wzp6_gammae_eZ_Zee_ecm365': {},

    'wzp6_gaga_tautau_60_ecm365': {},
    'wzp6_gaga_mumu_60_ecm365': {},
    'wzp6_gaga_ee_60_ecm365': {},

    'wzp6_ee_nuenueZ_ecm365': {},
    'wzp6_ee_nunuH_Htautau_ecm365': {},
    'wzp6_ee_nunuH_Hbb_ecm365': {},
    'wzp6_ee_nunuH_Hcc_ecm365': {},
    'wzp6_ee_nunuH_Hss_ecm365': {},
    'wzp6_ee_nunuH_Hgg_ecm365': {},
    'wzp6_ee_nunuH_HWW_ecm365': {},
    'wzp6_ee_nunuH_HZZ_ecm365': {},

    'wzp6_ee_eeH_Htautau_ecm365': {},
    'wzp6_ee_eeH_Hbb_ecm365': {},
    'wzp6_ee_eeH_Hcc_ecm365': {},
    'wzp6_ee_eeH_Hss_ecm365': {},
    'wzp6_ee_eeH_Hgg_ecm365': {},
    'wzp6_ee_eeH_HWW_ecm365': {},
    'wzp6_ee_eeH_HZZ_ecm365': {},

    'wzp6_ee_mumuH_Htautau_ecm365': {},
    'wzp6_ee_mumuH_Hbb_ecm365': {},
    'wzp6_ee_mumuH_Hcc_ecm365': {},
    'wzp6_ee_mumuH_Hss_ecm365': {},
    'wzp6_ee_mumuH_Hgg_ecm365': {},
    'wzp6_ee_mumuH_HWW_ecm365': {},
    'wzp6_ee_mumuH_HZZ_ecm365': {},

    'wzp6_ee_bbH_Htautau_ecm365': {},
    'wzp6_ee_bbH_Hbb_ecm365': {},
    'wzp6_ee_bbH_Hcc_ecm365': {},
    'wzp6_ee_bbH_Hss_ecm365': {},
    'wzp6_ee_bbH_Hgg_ecm365': {},
    'wzp6_ee_bbH_HWW_ecm365': {},
    'wzp6_ee_bbH_HZZ_ecm365': {},

    'wzp6_ee_ccH_Htautau_ecm365': {},
    'wzp6_ee_ccH_Hbb_ecm365': {},
    'wzp6_ee_ccH_Hcc_ecm365': {},
    'wzp6_ee_ccH_Hss_ecm365': {},
    'wzp6_ee_ccH_Hgg_ecm365': {},
    'wzp6_ee_ccH_HWW_ecm365': {},
    'wzp6_ee_ccH_HZZ_ecm365': {},

    'wzp6_ee_ssH_Htautau_ecm365': {},
    'wzp6_ee_ssH_Hbb_ecm365': {},
    'wzp6_ee_ssH_Hcc_ecm365': {},
    'wzp6_ee_ssH_Hss_ecm365': {},
    'wzp6_ee_ssH_Hgg_ecm365': {},
    'wzp6_ee_ssH_HWW_ecm365': {},
    'wzp6_ee_ssH_HZZ_ecm365': {},

    'wzp6_ee_qqH_Htautau_ecm365': {},
    'wzp6_ee_qqH_Hbb_ecm365': {},
    'wzp6_ee_qqH_Hcc_ecm365': {},
    'wzp6_ee_qqH_Hss_ecm365': {},
    'wzp6_ee_qqH_Hgg_ecm365': {},
    'wzp6_ee_qqH_HWW_ecm365': {},
    'wzp6_ee_qqH_HZZ_ecm365': {},

    'wzp6_ee_nuenueH_Htautau_ecm365': {},
    'wzp6_ee_nuenueH_Hbb_ecm365': {},
    'wzp6_ee_nuenueH_Hcc_ecm365': {},
    'wzp6_ee_nuenueH_Hss_ecm365': {},
    'wzp6_ee_nuenueH_Hgg_ecm365': {},
    'wzp6_ee_nuenueH_HWW_ecm365': {},
    'wzp6_ee_nuenueH_HZZ_ecm365': {},  

    'wzp6_ee_numunumuH_Htautau_ecm365': {},
    'wzp6_ee_numunumuH_Hbb_ecm365': {},
    'wzp6_ee_numunumuH_Hcc_ecm365': {},
    'wzp6_ee_numunumuH_Hss_ecm365': {},
    'wzp6_ee_numunumuH_Hgg_ecm365': {},
    'wzp6_ee_numunumuH_HWW_ecm365': {},
    'wzp6_ee_numunumuH_HZZ_ecm365': {},
}

# additional/costom C++ functions, defined in header files (optional)
includePaths = ["functions.h"]

ROOT.gInterpreter.ProcessLine('''TMVA::Experimental::RBDT<> bdt("Htautau", "/ceph/sgiappic/FCCAnalyses/examples/FCCee/higgs/tautau/xsec/ecm365/BDT/models/R5-tag/xgb_bdt_R5-tag_NuNuHH.root");

                                computeModel = TMVA::Experimental::Compute<27, float>(bdt);''') #needs to be passed the number of variables

#Mandatory: RDFanalysis class where the use defines the operations on the TTree
class RDFanalysis():
    def analysers(df):
        df2 = (df
                #recast some of the varibales to be all the same type
                .Define("fRecoEmiss_costheta",       "static_cast<float>(RecoEmiss_costheta)")
                .Define("fRecoH_pz",       "static_cast<float>(RecoH_pz)")
                .Define("fRecoH_pt",       "static_cast<float>(RecoH_pt)")
                .Define("fRecoH_p",       "static_cast<float>(RecoH_p)")
                .Define("fRecoH_e",       "static_cast<float>(RecoH_e)")
                .Define("fRecoH_eta",       "static_cast<float>(RecoH_eta)")
                .Define("fVisible_mass",       "static_cast<float>(Visible_mass)")
                .Define("fTauLead_pz",       "static_cast<float>(TauLead_pz)")
                .Define("fTauLead_pt",       "static_cast<float>(TauLead_pt)")
                .Define("fTauLead_p",       "static_cast<float>(TauLead_p)")
                .Define("fTauLead_e",       "static_cast<float>(TauLead_e)")
                .Define("fTauLead_eta",       "static_cast<float>(TauLead_eta)")
                .Define("fTauLead_mass",       "static_cast<float>(TauLead_mass)")
                .Define("fTauLead_type",       "static_cast<float>(TauLead_type)")
                .Define("fn_TauLead_charged_constituents",       "static_cast<float>(n_TauLead_charged_constituents)")
                .Define("fn_TauLead_neutral_constituents",       "static_cast<float>(n_TauLead_neutral_constituents)")
                .Define("fTauSub_pz",       "static_cast<float>(TauSub_pz)")
                .Define("fTauSub_pt",       "static_cast<float>(TauSub_pt)")
                .Define("fTauSub_p",       "static_cast<float>(TauSub_p)")
                .Define("fTauSub_e",       "static_cast<float>(TauSub_e)")
                .Define("fTauSub_eta",       "static_cast<float>(TauSub_eta)")
                .Define("fTauSub_mass",       "static_cast<float>(TauSub_mass)")
                .Define("fTau_DPhi",       "static_cast<float>(Tau_DPhi)")
                .Define("fTau_DR",       "static_cast<float>(Tau_DR)")
                .Define("fTau_cos",       "static_cast<float>(Tau_cos)")
                .Define("fTau_DEta",       "static_cast<float>(Tau_DEta)")
                .Define("fTauSub_type",       "static_cast<float>(TauSub_type)")
                .Define("fn_TauSub_charged_constituents",       "static_cast<float>(n_TauSub_charged_constituents)")
                .Define("fn_TauSub_neutral_constituents",       "static_cast<float>(n_TauSub_neutral_constituents)")

                ##### variable lists need to have the same order of variables used in the training to work properly, renaming them is ok
                .Define("BDT_pred", ROOT.computeModel, ["RecoEmiss_pz",
                                                        "RecoEmiss_pt",
                                                        "RecoEmiss_p",
                                                        "RecoEmiss_e",
                                                        "fRecoEmiss_costheta",
                                                        "fRecoH_pz",
                                                        "fRecoH_p",
                                                        "fRecoH_pt",
                                                        "fRecoH_e",
                                                        "fRecoH_eta",
                                                        "fTauLead_pz",
                                                        "fTauLead_p",
                                                        "fTauLead_pt",
                                                        "fTauLead_e",
                                                        "fTauLead_eta",
                                                        "fTauLead_mass",
                                                        "fTauLead_type",
                                                        "n_TauLead_charged_constituents",
                                                        "n_TauLead_neutral_constituents",
                                                        "fTauSub_pz",
                                                        "fTauSub_p",
                                                        "fTauSub_pt",
                                                        "fTauSub_e",
                                                        "fTauSub_eta",
                                                        "fTauSub_mass",
                                                        "fTauSub_type",
                                                        "fn_TauSub_charged_constituents",
                                                        "fn_TauSub_neutral_constituents",
                                                        "fTau_DPhi",
                                                        "fTau_DR",
                                                        "fTau_cos",
                                                        "fTau_DEta",
                                                        "fVisible_mass",
                                                        ])

                .Define("BDT_score_bkg",        "BDT_pred.at(0)")
                .Define("BDT_score_ZH",         "BDT_pred.at(1)")
                .Define("BDT_score_VBF",        "BDT_pred.at(2)")
        )
        return df2

    #__________________________________________________________
    #Mandatory: output function, please make sure you return the branchlist as a python list
    def output():
        #branches from stage1 to be kept for histogram booking in final and plotting
        branchList = [
            ######## Monte-Carlo particles #######
            "n_FSGenElectron",
            "FSGenElectron_e",
            "FSGenElectron_p",
            "FSGenElectron_pt",
            "FSGenElectron_px",
            "FSGenElectron_py",
            "FSGenElectron_pz",
            "FSGenElectron_y",
            "FSGenElectron_eta",
            "FSGenElectron_theta",
            "FSGenElectron_phi",
            "FSGenElectron_charge",
            "FSGenElectron_mass",
            "FSGenElectron_parentPDG",
            "FSGenElectron_vertex_x",
            "FSGenElectron_vertex_y",
            "FSGenElectron_vertex_z",

            "n_FSGenMuon",
            "FSGenMuon_e",
            "FSGenMuon_p",
            "FSGenMuon_pt",
            "FSGenMuon_px",
            "FSGenMuon_py",
            "FSGenMuon_pz",
            "FSGenMuon_y",
            "FSGenMuon_eta",
            "FSGenMuon_theta",
            "FSGenMuon_phi",
            "FSGenMuon_charge",
            "FSGenMuon_mass",
            "FSGenMuon_parentPDG",
            "FSGenMuon_vertex_x",
            "FSGenMuon_vertex_y",
            "FSGenMuon_vertex_z",

            #"n_AllGenTau",
            #"AllGenTau_e",
            #"AllGenTau_p",
            #"AllGenTau_pt",
            #"AllGenTau_px",
            #"AllGenTau_py",
            #"AllGenTau_pz",
            #"AllGenTau_y",
            #"AllGenTau_eta",
            #"AllGenTau_theta",
            #"AllGenTau_phi",
            #"AllGenTau_charge",
            #"AllGenTau_mass",
            #"AllGenTau_parentPDG",
            #"AllGenTau_vertex_x",
            #"AllGenTau_vertex_y",
            #"AllGenTau_vertex_z",

            "n_HiggsGenTau",
            "HiggsGenTau_e",
            "HiggsGenTau_p",
            "HiggsGenTau_pt",
            "HiggsGenTau_px",
            "HiggsGenTau_py",
            "HiggsGenTau_pz",
            "HiggsGenTau_y",
            "HiggsGenTau_eta",
            "HiggsGenTau_theta",
            "HiggsGenTau_phi",
            "HiggsGenTau_charge",
            "HiggsGenTau_mass",
            "HiggsGenTau_parentPDG",
            "HiggsGenTau_vertex_x",
            "HiggsGenTau_vertex_y",
            "HiggsGenTau_vertex_z",

            "n_TauNeg_MuNuNu",       
            "n_TauNeg_MuNuNu_Phot",  
            "n_TauNeg_ENuNu",        
            "n_TauNeg_ENuNu_Phot",   
            "n_TauNeg_PiNu",         
            "n_TauNeg_PiNu_Phot",    
            "n_TauNeg_KNu",          
            "n_TauNeg_KNu_Phot",     
            "n_TauNeg_PiK0Nu",       
            "n_TauNeg_PiK0Nu_Phot",  
            "n_TauNeg_KK0Nu",        
            "n_TauNeg_KK0Nu_Phot",   
            "n_TauNeg_3PiNu",        
            "n_TauNeg_3PiNu_Phot",   
            "n_TauNeg_PiKKNu",       
            "n_TauNeg_PiKKNu_Phot",  

            "n_TauPos_MuNuNu",       
            "n_TauPos_MuNuNu_Phot",  
            "n_TauPos_ENuNu",        
            "n_TauPos_ENuNu_Phot",   
            "n_TauPos_PiNu",         
            "n_TauPos_PiNu_Phot",    
            "n_TauPos_KNu",          
            "n_TauPos_KNu_Phot",     
            "n_TauPos_PiK0Nu",       
            "n_TauPos_PiK0Nu_Phot",  
            "n_TauPos_KK0Nu",        
            "n_TauPos_KK0Nu_Phot",   
            "n_TauPos_3PiNu",        
            "n_TauPos_3PiNu_Phot",   
            "n_TauPos_PiKKNu",       
            "n_TauPos_PiKKNu_Phot", 

            "n_FSGenNeutrino",
            "FSGenNeutrino_e",
            "FSGenNeutrino_p",
            "FSGenNeutrino_pt",
            "FSGenNeutrino_px",
            "FSGenNeutrino_py",
            "FSGenNeutrino_pz",
            "FSGenNeutrino_y",
            "FSGenNeutrino_eta",
            "FSGenNeutrino_theta",
            "FSGenNeutrino_phi",
            "FSGenNeutrino_charge",
            #"FSGenNeutrino_parentPDG",

            "n_FSGenPhoton",
            "FSGenPhoton_e",
            "FSGenPhoton_p",
            "FSGenPhoton_pt",
            "FSGenPhoton_px",
            "FSGenPhoton_py",
            "FSGenPhoton_pz",
            "FSGenPhoton_y",
            "FSGenPhoton_eta",
            "FSGenPhoton_theta",
            "FSGenPhoton_phi",
            "FSGenPhoton_charge",
            #"FSGenPhoton_parentPDG",

            "n_GenHiggs",
            "GenHiggs_e",
            "GenHiggs_p", 
            "GenHiggs_pt", 
            "GenHiggs_px", 
            "GenHiggs_py", 
            "GenHiggs_pz", 
            "GenHiggs_y", 
            "GenHiggs_mass",
            "GenHiggs_eta", 
            "GenHiggs_theta", 
            "GenHiggs_phi", 
            "GenHiggs_charge", 

            ######## Reconstructed particles #######
            #"RecoMC_PID",

            "n_RecoElectrons",
            "RecoElectron_e",
            "RecoElectron_p",
            "RecoElectron_pt",
            "RecoElectron_px",
            "RecoElectron_py",
            "RecoElectron_pz",
            "RecoElectron_y",
            "RecoElectron_eta",
            "RecoElectron_theta",
            "RecoElectron_phi",
            "RecoElectron_charge",
            "RecoElectron_mass",
            "RecoElectronTrack_absD0",
            "RecoElectronTrack_absZ0",
            "RecoElectronTrack_absD0sig",
            "RecoElectronTrack_absZ0sig",
            "RecoElectronTrack_D0cov",
            "RecoElectronTrack_Z0cov",

            "n_RecoElectrons_sel",
            "RecoElectron_sel_e",
            "RecoElectron_sel_p",
            "RecoElectron_sel_pt",
            "RecoElectron_sel_px",
            "RecoElectron_sel_py",
            "RecoElectron_sel_pz",
            "RecoElectron_sel_y",
            "RecoElectron_sel_eta",
            "RecoElectron_sel_theta",
            "RecoElectron_sel_phi",
            "RecoElectron_sel_charge",
            "RecoElectron_sel_mass",
            "RecoElectronTrack_sel_absD0",
            "RecoElectronTrack_sel_absZ0",
            "RecoElectronTrack_sel_absD0sig",
            "RecoElectronTrack_sel_absZ0sig",
            "RecoElectronTrack_sel_D0cov",
            "RecoElectronTrack_sel_Z0cov",

            "n_RecoMuons",
            "RecoMuon_e",
            "RecoMuon_p",
            "RecoMuon_pt",
            "RecoMuon_px",
            "RecoMuon_py",
            "RecoMuon_pz",
            "RecoMuon_y",
            "RecoMuon_eta",
            "RecoMuon_theta",
            "RecoMuon_phi",
            "RecoMuon_charge",
            "RecoMuon_mass",
            "RecoMuonTrack_absD0",
            "RecoMuonTrack_absZ0",
            "RecoMuonTrack_absD0sig",
            "RecoMuonTrack_absZ0sig",
            "RecoMuonTrack_D0cov",
            "RecoMuonTrack_Z0cov",

            "n_RecoMuons_sel",
            "RecoMuon_sel_e",
            "RecoMuon_sel_p",
            "RecoMuon_sel_pt",
            "RecoMuon_sel_px",
            "RecoMuon_sel_py",
            "RecoMuon_sel_pz",
            "RecoMuon_sel_y",
            "RecoMuon_sel_eta",
            "RecoMuon_sel_theta",
            "RecoMuon_sel_phi",
            "RecoMuon_sel_charge",
            "RecoMuon_sel_mass",
            "RecoMuonTrack_sel_absD0",
            "RecoMuonTrack_sel_absZ0",
            "RecoMuonTrack_sel_absD0sig",
            "RecoMuonTrack_sel_absZ0sig",
            "RecoMuonTrack_sel_D0cov",
            "RecoMuonTrack_sel_Z0cov",

            "n_RecoLeptons",
            "RecoLepton_e",
            "RecoLepton_p",
            "RecoLepton_pt",
            "RecoLepton_px",
            "RecoLepton_py",
            "RecoLepton_pz",
            "RecoLepton_y",
            "RecoLepton_eta",
            "RecoLepton_theta",
            "RecoLepton_phi",
            "RecoLepton_charge",
            "RecoLepton_mass",
            "RecoLeptonTrack_absD0",
            "RecoLeptonTrack_absZ0",
            "RecoLeptonTrack_absD0sig",
            "RecoLeptonTrack_absZ0sig",
            "RecoLeptonTrack_D0cov",
            "RecoLeptonTrack_Z0cov",

            "n_RecoLeptons_sel",
            "RecoLepton_sel_e",
            "RecoLepton_sel_p",
            "RecoLepton_sel_pt",
            "RecoLepton_sel_px",
            "RecoLepton_sel_py",
            "RecoLepton_sel_pz",
            "RecoLepton_sel_y",
            "RecoLepton_sel_eta",
            "RecoLepton_sel_theta",
            "RecoLepton_sel_phi",
            "RecoLepton_sel_charge",
            "RecoLepton_sel_mass",
            "RecoLeptonTrack_sel_absD0",
            "RecoLeptonTrack_sel_absZ0",
            "RecoLeptonTrack_sel_absD0sig",
            "RecoLeptonTrack_sel_absZ0sig",
            "RecoLeptonTrack_sel_D0cov",
            "RecoLeptonTrack_sel_Z0cov",

            "n_RecoPhotons",
            "RecoPhoton_e",
            "RecoPhoton_p",
            "RecoPhoton_pt",
            "RecoPhoton_px",
            "RecoPhoton_py",
            "RecoPhoton_pz",
            "RecoPhoton_y",
            "RecoPhoton_eta",
            "RecoPhoton_theta",
            "RecoPhoton_phi",
            "RecoPhoton_charge",
            "RecoPhoton_mass",

            "n_NeutralHadrons",
            "NeutralHadrons_e",
            "NeutralHadrons_p",
            "NeutralHadrons_pt",
            "NeutralHadrons_px",
            "NeutralHadrons_py",
            "NeutralHadrons_pz",
            "NeutralHadrons_eta",
            "NeutralHadrons_theta",
            "NeutralHadrons_phi",
            "NeutralHadrons_charge",
            "NeutralHadrons_mass",

            #"n_NoEfficiency",
            #"NoEfficiency_e",
            #"NoEfficiency_p",
            #"NoEfficiency_pt",
            #"NoEfficiency_px",
            #"NoEfficiency_py",
            #"NoEfficiency_pz",
            #"NoEfficiency_eta",
            #"NoEfficiency_theta",
            #"NoEfficiency_phi",
            #"NoEfficiency_charge",
            #"NoEfficiency_type",
            #"NoEfficiency_mass",

            "RecoEmiss_px",
            "RecoEmiss_py",
            "RecoEmiss_pz",
            "RecoEmiss_pt",
            "RecoEmiss_p",
            "RecoEmiss_e",

            #"n_RecoTracks",
            #"RecoVertexObject",
            #"RecoVertex",
            #"n_PrimaryTracks",
            #"PrimaryVertexObject",
            #"PrimaryVertex", 
            #"PrimaryVertex_xyz",
            #"PrimaryVertes_xy",
            #"n_SecondaryTracks",
            #"SecondaryVertexObject",
            #"SecondaryVertex",
            #"SecondaryVertex_xyz",
            #"SecondaryVertes_xy",
            #"VertexObject", 
            #"RecoPartPID" ,
            #"RecoPartPIDAtVertex",

            #"Jets_R5_e",     
            #"Jets_R5_p",     
            #"Jets_R5_pt",     
            #"Jets_R5_px",   
            #"Jets_R5_py",   
            #"Jets_R5_pz",     
            #"Jets_R5_eta",    
            #"Jets_R5_theta",   
            #"Jets_R5_phi",     
            #"Jets_R5_mass",        
            #"n_Jets_R5", 

            #"Jets_excl4_e",     
            #"Jets_excl4_p",     
            #"Jets_excl4_pt",     
            #"Jets_excl4_px",   
            #"Jets_excl4_py",   
            #"Jets_excl4_pz",     
            #"Jets_excl4_eta",    
            #"Jets_excl4_theta",   
            #"Jets_excl4_phi",     
            #"Jets_excl4_mass",        
            #"n_Jets_excl4", 
 
            #"TauFromJet_R5_p",
            #"TauFromJet_R5_pt",
            #"TauFromJet_R5_px",
            #"TauFromJet_R5_py",
            #"TauFromJet_R5_pz",
            #"TauFromJet_R5_theta",
            #"TauFromJet_R5_phi",
            #"TauFromJet_R5_e",
            #"TauFromJet_R5_eta",
            #"TauFromJet_R5_y",
            #"TauFromJet_R5_charge",
            #"TauFromJet_R5_type",
            #"TauFromJet_R5_mass",
            #"n_TauFromJet_R5",

            #"TauFromJet_p",
            #"TauFromJet_pt",
            #"TauFromJet_px",
            #"TauFromJet_py",
            #"TauFromJet_pz",
            #"TauFromJet_theta",
            #"TauFromJet_phi",
            #"TauFromJet_eta",
            #"TauFromJet_y",
            #"TauFromJet_e",
            #"TauFromJet_charge",
            #"TauFromJet_type",
            #"TauFromJet_mass",
            #"n_TauFromJet",

            #"Jets_R5_sel_e",     
            #"Jets_R5_sel_p",     
            #"Jets_R5_sel_pt",     
            #"Jets_R5_sel_px",   
            #"Jets_R5_sel_py",   
            #"Jets_R5_sel_pz",     
            #"Jets_R5_sel_eta",    
            #"Jets_R5_sel_theta",   
            #"Jets_R5_sel_phi",     
            #"Jets_R5_sel_mass",      
            #"n_Jets_R5_sel", 

            "TagJet_R5_px", 
            "TagJet_R5_py",    
            "TagJet_R5_pz",      
            "TagJet_R5_p",  
            "TagJet_R5_pt",    
            "TagJet_R5_phi", 
            "TagJet_R5_eta",     
            "TagJet_R5_theta",          
            "TagJet_R5_e",     
            "TagJet_R5_mass",        
            "TagJet_R5_charge",       
            "TagJet_R5_flavor", 
            "n_TagJet_R5_constituents",   
            "n_TagJet_R5_charged_constituents",   
            "n_TagJet_R5_neutral_constituents",   
            "n_TagJet_R5",    
            "TagJet_R5_cleanup",        

            "TagJet_R5_isG",  
            "TagJet_R5_isU",
            "TagJet_R5_isD",   
            "TagJet_R5_isS",  
            "TagJet_R5_isC",
            "TagJet_R5_isB",  
            "TagJet_R5_isTAU",

            "TauFromJet_R5_p",
            "TauFromJet_R5_pt",
            "TauFromJet_R5_px",
            "TauFromJet_R5_py",
            "TauFromJet_R5_pz",
            "TauFromJet_R5_theta",
            "TauFromJet_R5_phi",
            "TauFromJet_R5_e",
            "TauFromJet_R5_eta",
            "TauFromJet_R5_y",
            "TauFromJet_R5_charge",
            "TauFromJet_R5_type",
            "TauFromJet_R5_mass",
            "n_TauFromJet_R5",

            "TagJet_R5_sel_e",     
            "TagJet_R5_sel_p",     
            "TagJet_R5_sel_pt",     
            "TagJet_R5_sel_px",   
            "TagJet_R5_sel_py",   
            "TagJet_R5_sel_pz",     
            "TagJet_R5_sel_eta",    
            "TagJet_R5_sel_theta",   
            "TagJet_R5_sel_phi",     
            "TagJet_R5_sel_mass",      
            "n_TagJet_R5_sel", 
            
            "TagJet_kt4_px", 
            "TagJet_kt4_py",    
            "TagJet_kt4_pz",      
            "TagJet_kt4_p",  
            "TagJet_kt4_pt",    
            "TagJet_kt4_phi", 
            "TagJet_kt4_eta",     
            "TagJet_kt4_theta",          
            "TagJet_kt4_e",     
            "TagJet_kt4_mass",        
            "TagJet_kt4_charge",       
            "TagJet_kt4_flavor", 
            "n_TagJet_kt4_constituents",   
            "n_TagJet_kt4_charged_constituents",   
            "n_TagJet_kt4_neutral_constituents",   
            "n_TagJet_kt4",          

            "TagJet_kt4_isG",  
            "TagJet_kt4_isU",
            "TagJet_kt4_isD",   
            "TagJet_kt4_isS",  
            "TagJet_kt4_isC",
            "TagJet_kt4_isB",  
            "TagJet_kt4_isTAU",

            "TauFromJet_kt4_p",
            "TauFromJet_kt4_pt",
            "TauFromJet_kt4_px",
            "TauFromJet_kt4_py",
            "TauFromJet_kt4_pz",
            "TauFromJet_kt4_theta",
            "TauFromJet_kt4_phi",
            "TauFromJet_kt4_e",
            "TauFromJet_kt4_eta",
            "TauFromJet_kt4_y",
            "TauFromJet_kt4_charge",
            "TauFromJet_kt4_type",
            "TauFromJet_kt4_mass",
            "n_TauFromJet_kt4",

            "TagJet_kt4_sel_e",     
            "TagJet_kt4_sel_p",     
            "TagJet_kt4_sel_pt",     
            "TagJet_kt4_sel_px",   
            "TagJet_kt4_sel_py",   
            "TagJet_kt4_sel_pz",     
            "TagJet_kt4_sel_eta",    
            "TagJet_kt4_sel_theta",   
            "TagJet_kt4_sel_phi",     
            "TagJet_kt4_sel_mass",      
            "n_TagJet_kt4_sel",

            "TagJet_kt3_px", 
            "TagJet_kt3_py",    
            "TagJet_kt3_pz",      
            "TagJet_kt3_p",  
            "TagJet_kt3_pt",    
            "TagJet_kt3_phi", 
            "TagJet_kt3_eta",     
            "TagJet_kt3_theta",          
            "TagJet_kt3_e",     
            "TagJet_kt3_mass",        
            "TagJet_kt3_charge",       
            "TagJet_kt3_flavor", 
            "n_TagJet_kt3_constituents",   
            "n_TagJet_kt3_charged_constituents",   
            "n_TagJet_kt3_neutral_constituents",   
            "n_TagJet_kt3",          

            "TagJet_kt3_isG",  
            "TagJet_kt3_isU",
            "TagJet_kt3_isD",   
            "TagJet_kt3_isS",  
            "TagJet_kt3_isC",
            "TagJet_kt3_isB",  
            "TagJet_kt3_isTAU",

            "TauFromJet_kt3_p",
            "TauFromJet_kt3_pt",
            "TauFromJet_kt3_px",
            "TauFromJet_kt3_py",
            "TauFromJet_kt3_pz",
            "TauFromJet_kt3_theta",
            "TauFromJet_kt3_phi",
            "TauFromJet_kt3_e",
            "TauFromJet_kt3_eta",
            "TauFromJet_kt3_y",
            "TauFromJet_kt3_charge",
            "TauFromJet_kt3_type",
            "TauFromJet_kt3_mass",
            "n_TauFromJet_kt3",

            "TagJet_kt3_sel_e",     
            "TagJet_kt3_sel_p",     
            "TagJet_kt3_sel_pt",     
            "TagJet_kt3_sel_px",   
            "TagJet_kt3_sel_py",   
            "TagJet_kt3_sel_pz",     
            "TagJet_kt3_sel_eta",    
            "TagJet_kt3_sel_theta",   
            "TagJet_kt3_sel_phi",     
            "TagJet_kt3_sel_mass",      
            "n_TagJet_kt3_sel",

            "TagJet_kt2_px", 
            "TagJet_kt2_py",    
            "TagJet_kt2_pz",      
            "TagJet_kt2_p",  
            "TagJet_kt2_pt",    
            "TagJet_kt2_phi", 
            "TagJet_kt2_eta",     
            "TagJet_kt2_theta",          
            "TagJet_kt2_e",     
            "TagJet_kt2_mass",        
            "TagJet_kt2_charge",       
            "TagJet_kt2_flavor", 
            "n_TagJet_kt2_constituents",   
            "n_TagJet_kt2_charged_constituents",   
            "n_TagJet_kt2_neutral_constituents",   
            "n_TagJet_kt2",          

            "TagJet_kt2_isG",  
            "TagJet_kt2_isU",
            "TagJet_kt2_isD",   
            "TagJet_kt2_isS",  
            "TagJet_kt2_isC",
            "TagJet_kt2_isB",  
            "TagJet_kt2_isTAU",

            "TauFromJet_kt2_p",
            "TauFromJet_kt2_pt",
            "TauFromJet_kt2_px",
            "TauFromJet_kt2_py",
            "TauFromJet_kt2_pz",
            "TauFromJet_kt2_theta",
            "TauFromJet_kt2_phi",
            "TauFromJet_kt2_e",
            "TauFromJet_kt2_eta",
            "TauFromJet_kt2_y",
            "TauFromJet_kt2_charge",
            "TauFromJet_kt2_type",
            "TauFromJet_kt2_mass",
            "n_TauFromJet_kt2",

            "TagJet_kt2_sel_e",     
            "TagJet_kt2_sel_p",     
            "TagJet_kt2_sel_pt",     
            "TagJet_kt2_sel_px",   
            "TagJet_kt2_sel_py",   
            "TagJet_kt2_sel_pz",     
            "TagJet_kt2_sel_eta",    
            "TagJet_kt2_sel_theta",   
            "TagJet_kt2_sel_phi",     
            "TagJet_kt2_sel_mass",      
            "n_TagJet_kt2_sel",

            "TagJet_kt1_px", 
            "TagJet_kt1_py",    
            "TagJet_kt1_pz",      
            "TagJet_kt1_p",  
            "TagJet_kt1_pt",    
            "TagJet_kt1_phi", 
            "TagJet_kt1_eta",     
            "TagJet_kt1_theta",          
            "TagJet_kt1_e",     
            "TagJet_kt1_mass",        
            "TagJet_kt1_charge",       
            "TagJet_kt1_flavor", 
            "n_TagJet_kt1_constituents",   
            "n_TagJet_kt1_charged_constituents",   
            "n_TagJet_kt1_neutral_constituents",   
            "n_TagJet_kt1",          

            "TagJet_kt1_isG",  
            "TagJet_kt1_isU",
            "TagJet_kt1_isD",   
            "TagJet_kt1_isS",  
            "TagJet_kt1_isC",
            "TagJet_kt1_isB",  
            "TagJet_kt1_isTAU",

            "TauFromJet_kt1_p",
            "TauFromJet_kt1_pt",
            "TauFromJet_kt1_px",
            "TauFromJet_kt1_py",
            "TauFromJet_kt1_pz",
            "TauFromJet_kt1_theta",
            "TauFromJet_kt1_phi",
            "TauFromJet_kt1_e",
            "TauFromJet_kt1_eta",
            "TauFromJet_kt1_y",
            "TauFromJet_kt1_charge",
            "TauFromJet_kt1_type",
            "TauFromJet_kt1_mass",
            "n_TauFromJet_kt1",

            "TagJet_kt1_sel_e",     
            "TagJet_kt1_sel_p",     
            "TagJet_kt1_sel_pt",     
            "TagJet_kt1_sel_px",   
            "TagJet_kt1_sel_py",   
            "TagJet_kt1_sel_pz",     
            "TagJet_kt1_sel_eta",    
            "TagJet_kt1_sel_theta",   
            "TagJet_kt1_sel_phi",     
            "TagJet_kt1_sel_mass",      
            "n_TagJet_kt1_sel",

            "n_GenTau_had", 
            "n_TauTag_R5_match",  
            "n_TauTag_R5mass_match",
            "n_events_R5tag",  
            "n_events_R5masstag",
            "n_events_R5excl",

            "n_TauTag_kt4_match",  
            "n_TauTag_kt4mass_match",
            "n_events_kt4tag",  
            "n_events_kt4masstag",
            "n_events_kt4excl",

            "n_TauTag_kt3_match",  
            "n_TauTag_kt3mass_match",
            "n_events_kt3tag",  
            "n_events_kt3masstag",
            "n_events_kt3excl",

            "n_TauTag_kt2_match",  
            "n_TauTag_kt2mass_match",
            "n_events_kt2tag",  
            "n_events_kt2masstag",
            "n_events_kt2excl",

            "n_TauTag_kt1_match",  
            "n_TauTag_kt1mass_match",
            "n_events_kt1tag",  
            "n_events_kt1masstag",
            "n_events_kt1excl",  

        ]
        #complex variables added here at stage2
        branchList += [
        branchList += [
                "TauTag_px", 
                "TauTag_py",    
                "TauTag_pz",      
                "TauTag_p",  
                "TauTag_pt",    
                "TauTag_phi", 
                "TauTag_eta",     
                "TauTag_theta",          
                "TauTag_e",     
                "TauTag_mass",        
                "TauTag_charge",       
                "TauTag_flavor",       
                "n_TauTag",          
                "TauTag_isG",  
                "TauTag_isU",
                "TauTag_isD",   
                "TauTag_isS",  
                "TauTag_isC",
                "TauTag_isB",  
                "TauTag_isTAU",

                "QuarkTag_px", 
                "QuarkTag_py",    
                "QuarkTag_pz",      
                "QuarkTag_p",  
                "QuarkTag_pt",    
                "QuarkTag_phi", 
                "QuarkTag_eta",     
                "QuarkTag_theta",          
                "QuarkTag_e",     
                "QuarkTag_mass",        
                "QuarkTag_charge",       
                "QuarkTag_flavor",       
                "n_QuarkTag",          
                "QuarkTag_isG",  
                "QuarkTag_isU",
                "QuarkTag_isD",   
                "QuarkTag_isS",  
                "QuarkTag_isC",
                "QuarkTag_isB",  
                "QuarkTag_isTAU",
                
                "RecoEmiss_eta",
                "RecoEmiss_phi",
                "RecoEmiss_theta",
                "RecoEmiss_y",
                "RecoEmiss_costheta",

                #"RecoZ_px",
                #"RecoZ_py",
                #"RecoZ_pz",
                #"RecoZ_p",
                #"RecoZ_pt",
                #"RecoZ_e",
                #"RecoZ_eta",
                #"RecoZ_phi",
                #"RecoZ_theta",
                #"RecoZ_y",
                #"RecoZ_mass",

                "RecoH_px",
                "RecoH_py",
                "RecoH_pz",
                "RecoH_p",
                "RecoH_pt",
                "RecoH_e",
                "RecoH_eta",
                "RecoH_phi",
                "RecoH_theta",
                "RecoH_y",
                "RecoH_mass",

                "TauLead_px",    
                "TauLead_py",   
                "TauLead_pz",   
                "TauLead_p",   
                "TauLead_pt",   
                "TauLead_e",    
                "TauLead_eta",    
                "TauLead_phi",    
                "TauLead_theta",    
                "TauLead_y",    
                "TauLead_mass",
                "TauLead_type",
                "n_TauLead_constituents",
                "n_TauLead_charged_constituents",
                "n_TauLead_neutral_constituents",

                "TauSub_px",    
                "TauSub_py",   
                "TauSub_pz",   
                "TauSub_p",   
                "TauSub_pt",   
                "TauSub_e",    
                "TauSub_eta",    
                "TauSub_phi",    
                "TauSub_theta",    
                "TauSub_y",    
                "TauSub_mass",
                "TauSub_type",
                "n_TauSub_constituents",
                "n_TauSub_charged_constituents",
                "n_TauSub_neutral_constituents",
            
                "Tau_DR",
                "Tau_cos",
                "Tau_DEta", 
                "Tau_DPhi",

                #"Recoil",
                #"Collinear_mass",
                "Visible_mass",
                "BDT_score_bkg",  
                "BDT_score_ZH",    
                "BDT_score_VBF",   
            ]
        return branchList